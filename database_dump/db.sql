CREATE TYPE "chat_type" AS ENUM (
  'private',
  'group'
);

CREATE TYPE "device_type" AS ENUM (
  'phone',
  'laptop',
  'tablet'
);

CREATE TYPE "friend_status" AS ENUM (
  'pending',
  'accepted',
  'rejected'
);

CREATE TYPE "roles" AS ENUM (
  'student',
  'teacher'
);

CREATE TABLE "conversations" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "last_msg" int,
  "type" chat_type NOT NULL,
  "group_uuid" varchar(255) NOT NULL,
  "conversation_hash" varchar(255) NOT NULL
);

CREATE TABLE "friends" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "user_id" integer NOT NULL,
  "friend_id" integer NOT NULL,
  "status" friend_status NOT NULL,
  "created_at" timestamp NOT NULL
);

CREATE TABLE "messages" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "user_id" integer NOT NULL,
  "conversation_id" integer NOT NULL,
  "content" varchar(255) NOT NULL,
  "sent_at" varchar(255) NOT NULL,
  "delivered_at" varchar(255) NOT NULL,
  "edited" boolean NOT NULL,
  "replies_to" integer,
  "seen" boolean NOT NULL
);

CREATE TABLE "refresh_token" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "user_id" integer NOT NULL,
  "refresh_token" varchar(255) NOT NULL,
  "created_at" timestamp NOT NULL
);

CREATE TABLE "seen_messages" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "message_id" integer NOT NULL,
  "user_id" integer NOT NULL,
  "seen_at" varchar(255) NOT NULL
);

CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "name" varchar(255) NOT NULL,
  "lastname" varchar(255) NOT NULL,
  "surname" varchar(255) NOT NULL,
  "role" roles NOT NULL,
  "email" varchar(255) UNIQUE NOT NULL,
  "end_semester" integer NOT NULL,
  "now_semester" integer NOT NULL,
  "department" varchar(255) NOT NULL,
  "password" varchar(255) NOT NULL,
  "img_hash_name" varchar(255) NOT NULL,
  "created_at" timestamp NOT NULL
);

CREATE TABLE "users_conversations" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "user_id" integer NOT NULL,
  "conversation_id" integer NOT NULL
);

CREATE TABLE "group_users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "group_id" integer,
  "user_id" integer
);

CREATE TABLE "groups" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "conversation_id" integer,
  "owner_id" integer,
  "group_name" varchar(255) NOT NULL,
  "description" varchar(255) NOT NULL
);

ALTER TABLE "conversations" ADD FOREIGN KEY ("last_msg") REFERENCES "messages" ("id");

ALTER TABLE "group_users" ADD FOREIGN KEY ("group_id") REFERENCES "groups" ("id");

ALTER TABLE "group_users" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "groups" ADD FOREIGN KEY ("conversation_id") REFERENCES "conversations" ("id");

ALTER TABLE "groups" ADD FOREIGN KEY ("owner_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD CONSTRAINT "friends_friend_id_fkey" FOREIGN KEY ("friend_id") REFERENCES "users" ("id");

ALTER TABLE "friends" ADD CONSTRAINT "friends_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "messages" ADD CONSTRAINT "messages_conversation_id_fkey" FOREIGN KEY ("conversation_id") REFERENCES "conversations" ("id");

ALTER TABLE "messages" ADD CONSTRAINT "messages_replies_to_fkey" FOREIGN KEY ("replies_to") REFERENCES "messages" ("id");

ALTER TABLE "messages" ADD CONSTRAINT "messages_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "refresh_token" ADD CONSTRAINT "refresh_token_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "seen_messages" ADD CONSTRAINT "seen_messages_message_id_fkey" FOREIGN KEY ("message_id") REFERENCES "messages" ("id");

ALTER TABLE "seen_messages" ADD CONSTRAINT "seen_messages_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "users_conversations" ADD CONSTRAINT "users_conversations_conversation_id_fkey" FOREIGN KEY ("conversation_id") REFERENCES "conversations" ("id");

ALTER TABLE "users_conversations" ADD CONSTRAINT "users_conversations_user_id_fkey" FOREIGN KEY ("user_id") REFERENCES "users" ("id");
